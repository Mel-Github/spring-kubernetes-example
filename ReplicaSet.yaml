apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: spring-kubernetes-example
  labels:
    app: spring-kubernetes-example
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: backend
    matchExpressions:
      - {key: tier, operator: In, values: [backend]}
  template:
    metadata:
      labels:
        app: spring-kubernetes-example
        tier: backend
    spec:
      containers:
        - name: spring-kubernetes-example
          image: melcheng/spring-kubernetes-example:v2.0
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTIONS
              value: -Dspring.profiles.active=kubernetes
            - name: username
              valueFrom:
                secretKeyRef:
                  name: spring-kubernetes-example
                  key: username
            - name: password
              valueFrom:
                secretKeyRef:
                  name: spring-kubernetes-example
                  key: password
#            - name: MYSQL_HOST
#              valueFrom:
#                configMapKeyRef:
#                  name: spring-kubernetes-example
#                  key: dbhost
#            - name: MYSQL_DBNAME
#              valueFrom:
#                configMapKeyRef:
#                  name: spring-kubernetes-example
#                  key: dbname